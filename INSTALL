#!/bin/bash

# Herhangi bir komut başarısız olursa veya tanımsız bir değişken kullanılırsa betiği durdur.
set -euo pipefail

echo "================================================="
echo "=== Anlık Çeviri Asistanı Kurulum Betiği ==="
echo "================================================="
echo ""

# === Adım 1: Gerekli Sistem Bağımlılıklarını Yükleme ===
# PyGObject ve AppIndicator için gerekli olan tüm sistem paketlerini tek seferde kuruyoruz.
# Bu, PyGObject'i pip ile derleme derdinden bizi kurtarır.
echo "--> Adım 1: Gerekli sistem kütüphaneleri kuruluyor..."
sudo apt-get update
sudo apt-get install -y python3-venv python3-gi python3-gi-cairo gir1.2-gtk-3.0 libayatana-appindicator3-dev
echo "    Sistem kütüphaneleri başarıyla kuruldu."
echo ""

# === Adım 2: Sanal Ortamın Hazırlanması ===
echo "--> Adım 2: Python sanal ortamı hazırlanıyor..."
VENV_DIR="venv" # Standart olarak 'venv' ismini kullanmak daha yaygındır.

# Önceki kurulumlardan kalma eski sanal ortamı temizleyelim.
if [ -d "$VENV_DIR" ]; then
    echo "    Mevcut '$VENV_DIR' sanal ortamı bulundu ve temizleniyor..."
    rm -rf "$VENV_DIR"
fi

# Sanal ortamı, sistemdeki Python kütüphanelerini (PyGObject gibi) görebilecek şekilde oluşturuyoruz.
# Bu, derleme sorunlarını tamamen ortadan kaldırır.
echo "    Yeni sanal ortam '--system-site-packages' ile oluşturuluyor..."
python3 -m venv --system-site-packages "$VENV_DIR"
echo "    Sanal ortam başarıyla oluşturuldu."
echo ""

# === Adım 3: Python Paketlerini Yükleme ===
echo "--> Adım 3: Gerekli Python paketleri sanal ortama yükleniyor..."
# Oluşturduğumuz sanal ortamın içindeki pip'i kullanarak paketleri yüklüyoruz.
"$VENV_DIR"/bin/pip install --upgrade pip
"$VENV_DIR"/bin/pip install -r requirements.txt
echo "    Tüm Python paketleri başarıyla yüklendi."
echo ""

# === Adım 4: Uygulama Kısayolunu (.desktop dosyası) Oluşturma ===
echo "--> Adım 4: Uygulamalar menüsü için kısayol oluşturuluyor..."

# Değişkenleri tanımlayalım
SCRIPT_DIR=$(pwd) # Betiğin çalıştığı mevcut dizin
VENV_PYTHON="$SCRIPT_DIR/$VENV_DIR/bin/python"
GUI_SCRIPT_PATH="$SCRIPT_DIR/gui.py" # Ana uygulama script'i
ICON_PATH="$SCRIPT_DIR/ICONS/images.png" # PNG formatı daha iyi bir seçimdir
DESKTOP_DIR="$HOME/.local/share/applications"
DESKTOP_FILE_PATH="$DESKTOP_DIR/ceviri.desktop"

# Kısayolun konulacağı dizinin var olduğundan emin olalım
mkdir -p "$DESKTOP_DIR"

# .desktop dosyasını oluştur
cat << EOF > "$DESKTOP_FILE_PATH"
[Desktop Entry]
Version=1.0
Type=Application
Name=Anlık Çeviri Asistanı
Comment=Seçilen metni anında çeviren uygulama
Exec=$VENV_PYTHON $GUI_SCRIPT_PATH
Path=$SCRIPT_DIR
Icon=$ICON_PATH
Terminal=false
Categories=Utility;Office;
EOF

echo "    Kısayol başarıyla oluşturuldu: $DESKTOP_FILE_PATH"
echo ""

# === Adım 5: Sistem Başlangıcında Otomatik Çalıştırma (Crontab) ===
echo "--> Adım 5: Sistemin başlangıcında otomatik çalışması için ayar yapılıyor..."
LOG_FILE="$SCRIPT_DIR/ceviri.log"
CRON_TAG="#AnlikCeviriApp"
CRON_JOB="@reboot $VENV_PYTHON $GUI_SCRIPT_PATH > $LOG_FILE 2>&1 $CRON_TAG"

# Mevcut crontab'ı temizleyip yenisini ekliyoruz
(crontab -l 2>/dev/null | grep -v "$CRON_TAG"; echo "$CRON_JOB") | crontab -
echo "    Otomatik başlatma ayarı tamamlandı."
echo ""

echo "================================================="
echo "✅ KURULUM BAŞARIYLA TAMAMLANDI!"
echo ""
echo "Uygulamanızı artık 'Uygulamalar' menüsünde 'Anlık Çeviri Asistanı' olarak bulabilirsiniz."
echo "Eğer simge hemen görünmezse, lütfen oturumu kapatıp yeniden açın."
echo "================================================="
